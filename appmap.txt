Стек
    Frontend: React, React Router, Redux Tool Kit, Tailwind, TypeScript, React Hook Form, React Table, React Calendar, React DnD, React Icons, Axios    
    Backend: NodeJS, Express, MySQL, TypeScript, JWT, cors


Функционыл
    [x] Страница авторизации (Авторизация происходит по заранее созданным логин и пароль)
    [x] Главная страница (Пока пустая)
    [x] Меню навигации в SideBar
    [x] Страница Профиль, где пользователь видит свой логин и может поменять пароль
    [x] Страница "Справочник Валют" (Пользователь добавляет -name -code (USD RUB и т д будем заполять)-default (да/нет) - 1 Валюта как основная) это всё сохраняется в таблицу в бд
    [] Страница "Таблица курсов валют:" (Пользователь добавляет idВалюты datetime val (Значение заполняется относительно основной валюты))
    [] Страница "Справочник категорий" (Пользователь добавлет категории с учётом иерархии, выглядеть это должно как кккккпапки с подпапками)
    [] Страница "Справочник стран" (Пользователь добавляет - id - name)
    [] Страница "СЕЗОННОСТЬ" (Пользователь нажимает добавить шаблон, там пользователь добавляект имя, и выбирает периоды дат, как в календаре)
    [] Страница "НОМЕНКЛАТУРА" (У пользователя перед глазами таблица, он нажимает добавить, вводит название товара, дальше ему показывается список стран, которые мы добавили в справочник стран, около стран есть кнопка заполнить, и пользователь для каждой страницы добавляет skuCode - Артикул -type (Эксклюзив или обычный) -Новинка (datetime) до какого числа), дальше столбец Сезонность, где пользователь выбирает шаблон либо заполняет отдельно период дат в календаре для этого товара.)  



Прогресс:
1. Создание базовой структуры проекта:
   - Созданы директории frontend и backend для разделения клиентской и серверной части
   - Инициализирован Git репозиторий

2. Настройка Frontend:
   - Создано React приложение с TypeScript (create-react-app)
   - Установлены основные зависимости:
     * @reduxjs/toolkit и react-redux для управления состоянием
     * react-router-dom для маршрутизации
     * tailwindcss для стилизации
     * react-hook-form для работы с формами
     * @tanstack/react-table для таблиц
     * react-calendar для работы с календарем
     * react-dnd для drag-and-drop функционала
     * react-icons для иконок
     * axios для HTTP-запросов
   - Настроен Tailwind CSS (созданы tailwind.config.js и postcss.config.js)
   - Создана базовая структура Redux store
   - Настроен основной компонент App.tsx с базовой разметкой

3. Настройка Backend:
   - Инициализирован Node.js проект
   - Установлены основные зависимости:
     * express для создания API
     * typescript для типизации
     * mysql2 для работы с базой данных
     * jsonwebtoken для аутентификации
     * cors для настройки CORS
     * bcryptjs для хеширования паролей
   - Создана структура директорий:
     * src/routes для маршрутов
     * src/controllers для контроллеров
     * src/models для моделей данных
     * src/middleware для промежуточного ПО
     * src/config для конфигурации
   - Настроен TypeScript (tsconfig.json)
   - Создан базовый конфигурационный файл
   - Настроен основной файл сервера с базовым маршрутом